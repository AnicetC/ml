{"paragraphs":[{"text":"%spark\nimport org.apache.spark.mllib.tree.DecisionTree\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.feature.IndexToString","user":"anonymous","dateUpdated":"2018-01-02T22:16:04+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1514931349440_75307863","id":"20180102-221549_574391799","dateCreated":"2018-01-02T22:15:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:11681","dateFinished":"2018-01-02T22:16:05+0000","dateStarted":"2018-01-02T22:16:04+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.mllib.tree.DecisionTree\nimport org.apache.spark.ml.classification.DecisionTreeClassifier\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.feature.StringIndexer\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.feature.IndexToString\n"}]}},{"text":"%spark\nspark.catalog.setCurrentDatabase(\"DATABASE_NAME\")","user":"anonymous","dateUpdated":"2018-01-02T22:45:26+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{"0":{"graph":{"mode":"table","height":424,"optionOpen":false}}},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1514930838734_-1295114645","id":"20171218-020812_1798171821","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:14:17+0000","dateFinished":"2018-01-02T22:14:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:10906"},{"text":"spark.catalog.listTables().show()","user":"anonymous","dateUpdated":"2018-01-02T22:10:57+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+---------+-----------+---------+-----------+\n|                name| database|description|tableType|isTemporary|\n+--------------------+---------+-----------+---------+-----------+\n|    censusadult_data|censusdb2|       null| EXTERNAL|      false|\n|censusadult_data_...|censusdb2|       null| EXTERNAL|      false|\n|cleanadult_clean_...|censusdb2|       null| EXTERNAL|      false|\n+--------------------+---------+-----------+---------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1514930838734_-1295114645","id":"20171218-020821_266605350","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:14:18+0000","dateFinished":"2018-01-02T22:14:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10907"},{"text":"val df = spark.sql(\"select * from TABLENAME_HERE where age is not null\")","user":"anonymous","dateUpdated":"2018-01-02T22:13:42+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df: org.apache.spark.sql.DataFrame = [age: bigint, workclass: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1514930838734_-1295114645","id":"20171218-021321_776664365","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:14:18+0000","dateFinished":"2018-01-02T22:14:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10908"},{"text":"df.printSchema()","user":"anonymous","dateUpdated":"2018-01-02T22:13:49+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- age: long (nullable = true)\n |-- workclass: string (nullable = true)\n |-- education: string (nullable = true)\n |-- relationship: string (nullable = true)\n |-- occupation: string (nullable = true)\n |-- country: string (nullable = true)\n |-- income_cat: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1514930838735_-1295499394","id":"20171218-022009_1883419823","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:14:19+0000","dateFinished":"2018-01-02T22:14:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10909"},{"text":"df.show(10)","user":"anonymous","dateUpdated":"2018-01-02T22:14:12+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+----------------+---------+--------------------+-----------------+-------------+----------+\n|age|       workclass|education|        relationship|       occupation|      country|income_cat|\n+---+----------------+---------+--------------------+-----------------+-------------+----------+\n| 39|       State-gov|Bachelors|       Never-married|     Adm-clerical|United-States|     <=50K|\n| 50|Self-emp-not-inc|Bachelors|  Married-civ-spouse|  Exec-managerial|United-States|     <=50K|\n| 38|         Private|  HS-grad|            Divorced|Handlers-cleaners|United-States|     <=50K|\n| 53|         Private|     11th|  Married-civ-spouse|Handlers-cleaners|United-States|     <=50K|\n| 28|         Private|Bachelors|  Married-civ-spouse|   Prof-specialty|         Cuba|     <=50K|\n| 37|         Private|  Masters|  Married-civ-spouse|  Exec-managerial|United-States|     <=50K|\n| 49|         Private|      9th|Married-spouse-ab...|    Other-service|      Jamaica|     <=50K|\n| 52|Self-emp-not-inc|  HS-grad|  Married-civ-spouse|  Exec-managerial|United-States|      >50K|\n| 31|         Private|  Masters|       Never-married|   Prof-specialty|United-States|      >50K|\n| 42|         Private|Bachelors|  Married-civ-spouse|  Exec-managerial|United-States|      >50K|\n+---+----------------+---------+--------------------+-----------------+-------------+----------+\nonly showing top 10 rows\n\n"}]},"apps":[],"jobName":"paragraph_1514930838735_-1295499394","id":"20171218-022051_200665244","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:14:19+0000","dateFinished":"2018-01-02T22:14:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10910"},{"text":"val trainingSize = 0.8\nval testSize = 0.2\n\nval workclass_indexer = new StringIndexer().setInputCol(\"workclass\").setOutputCol(\"workclass-index\").fit(df)\nval edu_indexer = new StringIndexer().setInputCol(\"education\").setOutputCol(\"edu-index\").fit(df)\nval relationship_indexer = new StringIndexer().setInputCol(\"relationship\").setOutputCol(\"reln-index\").fit(df)\nval occupation_indexer = new StringIndexer().setInputCol(\"occupation\").setOutputCol(\"occu-index\").fit(df)\n\nval income_indexer = new StringIndexer().setInputCol(\"income_cat\").setOutputCol(\"category-index\").fit(df)\n\nval assembler = new VectorAssembler().setInputCols(Array(\"age\", \"workclass-index\", \"edu-index\", \"reln-index\", \"occu-index\")).setOutputCol(\"features\")\n\nval Array(trainingData, testData) = df.randomSplit(Array(trainingSize,testSize))\n\nprintln(\"trainingData count:\" + trainingData.count)\nprintln(\"testData count:\" + testData.count)\n\nval dt = new DecisionTreeClassifier().setLabelCol(\"category-index\").setFeaturesCol(\"features\")\nval labelConverter = new IndexToString()\n    .setInputCol(\"prediction\")\n    .setOutputCol(\"predictedLabel\")\n    .setLabels(income_indexer.labels)\n    \nval pipeline = new Pipeline().setStages(Array(workclass_indexer, edu_indexer, relationship_indexer, occupation_indexer, assembler, income_indexer, dt, labelConverter))\n","user":"anonymous","dateUpdated":"2018-01-02T22:42:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainingSize: Double = 0.8\ntestSize: Double = 0.2\nworkclass_indexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_de9b26f569a6\nedu_indexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_32073c8b2765\nrelationship_indexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_e3876cb52bf2\noccupation_indexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_48e1d7a25619\nincome_indexer: org.apache.spark.ml.feature.StringIndexerModel = strIdx_9f21f5a5e7b2\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_fad9d6555d63\ntrainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [age: bigint, workclass: string ... 5 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [age: bigint, workclass: string ... 5 more fields]\ntrainingData count:26120\ntestData count:6441\ndt: org.apache.spark.ml.classification.DecisionTreeClassifier = dtc_ea46dda3d7c5\nlabelConverter: org.apache.spark.ml.feature.IndexToString = idxToStr_20a63d13f915\npipeline: org.apache.spark.ml.Pipeline = pipeline_8ff825db0645\n"}]},"apps":[],"jobName":"paragraph_1514930838735_-1295499394","id":"20171218-022135_976865817","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:42:59+0000","dateFinished":"2018-01-02T22:43:21+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10911"},{"text":"val model = pipeline.fit(trainingData)","user":"anonymous","dateUpdated":"2018-01-02T22:40:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model: org.apache.spark.ml.PipelineModel = pipeline_999d45d530c9\npreds: org.apache.spark.sql.DataFrame = [age: bigint, workclass: string ... 15 more fields]\npreds_records: org.apache.spark.sql.DataFrame = [age: bigint, workclass: string ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1514930838735_-1295499394","id":"20171218-025202_63481401","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:37:20+0000","dateFinished":"2018-01-02T22:37:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10912"},{"text":"val preds = model.transform(testData)\nval preds_records = preds.select($\"age\", $\"workclass\", $\"education\", $\"relationship\", $\"probability\", $\"predictedLabel\")\n\npreds_records.show(20)\nprintln(\"count:\" + preds_records.count)\n","user":"anonymous","dateUpdated":"2018-01-02T22:44:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"preds: org.apache.spark.sql.DataFrame = [age: bigint, workclass: string ... 15 more fields]\npreds_records: org.apache.spark.sql.DataFrame = [age: bigint, workclass: string ... 4 more fields]\n+---+----------------+---------+-------------+--------------------+--------------+\n|age|       workclass|education| relationship|         probability|predictedLabel|\n+---+----------------+---------+-------------+--------------------+--------------+\n| 17|               ?|     10th|Never-married|[0.99957464908549...|         <=50K|\n| 17|               ?|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 17|               ?|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 17|       Local-gov|      9th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|     10th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|     10th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|     10th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|     12th|Never-married|[0.99957464908549...|         <=50K|\n| 17|         Private|  HS-grad|Never-married|[0.99957464908549...|         <=50K|\n| 17|Self-emp-not-inc|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 18|               ?|     12th|Never-married|[0.99957464908549...|         <=50K|\n| 18|       Local-gov|     12th|Never-married|[0.98615916955017...|         <=50K|\n| 18|       Local-gov|     12th|Never-married|[0.99957464908549...|         <=50K|\n| 18|         Private|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 18|         Private|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 18|         Private|     11th|Never-married|[0.99957464908549...|         <=50K|\n| 18|         Private|     11th|Never-married|[0.99957464908549...|         <=50K|\n+---+----------------+---------+-------------+--------------------+--------------+\nonly showing top 20 rows\n\ncount:6441\n"}]},"apps":[],"jobName":"paragraph_1514930838735_-1295499394","id":"20171218-031304_1960722418","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:44:18+0000","dateFinished":"2018-01-02T22:44:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10913"},{"text":"val pred_50Kover = pred_records.filter($\"predictedLabel\".contains(\">50K\"))\npred_50Kover.show(10)\nprintln(\"count:\" + pred_50Kover.count)","user":"anonymous","dateUpdated":"2018-01-02T22:44:50+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"pred_50Kover: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [age: bigint, workclass: string ... 4 more fields]\n+---+---------+-----------+------------------+--------------------+--------------+\n|age|workclass|  education|      relationship|         probability|predictedLabel|\n+---+---------+-----------+------------------+--------------------+--------------+\n| 26|Local-gov|  Bachelors|Married-civ-spouse|[0.40268456375838...|          >50K|\n| 26|  Private|    Masters|Married-civ-spouse|[0.40268456375838...|          >50K|\n| 29|  Private|  Bachelors|Married-civ-spouse|[0.40268456375838...|          >50K|\n| 30|  Private|  Bachelors|Married-civ-spouse|[0.27145214521452...|          >50K|\n| 31|Local-gov|  Doctorate|     Never-married|[0.42307692307692...|          >50K|\n| 32|  Private|  Bachelors|Married-civ-spouse|[0.16853932584269...|          >50K|\n| 32|  Private|  Bachelors|Married-civ-spouse|[0.27145214521452...|          >50K|\n| 32|  Private|  Bachelors|Married-civ-spouse|[0.27145214521452...|          >50K|\n| 33|  Private|  Bachelors|Married-civ-spouse|[0.27145214521452...|          >50K|\n| 33|  Private|Prof-school|     Never-married|[0.42307692307692...|          >50K|\n+---+---------+-----------+------------------+--------------------+--------------+\nonly showing top 10 rows\n\ncount:994\n"}]},"apps":[],"jobName":"paragraph_1514930838736_-1285111174","id":"20171218-031627_1008478753","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:44:50+0000","dateFinished":"2018-01-02T22:44:53+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10914"},{"text":"import org.apache.spark.ml.classification.DecisionTreeClassificationModel\n\nval treeModel = model.stages(6).asInstanceOf[DecisionTreeClassificationModel]\nprintln(\"Learned classification tree model:\\n\" + treeModel.toDebugString)","user":"anonymous","dateUpdated":"2018-01-02T22:07:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.ml.classification.DecisionTreeClassificationModel\ntreeModel: org.apache.spark.ml.classification.DecisionTreeClassificationModel = DecisionTreeClassificationModel (uid=dtc_1ed9e383201a) of depth 5 with 63 nodes\nLearned classification tree model:\nDecisionTreeClassificationModel (uid=dtc_1ed9e383201a) of depth 5 with 63 nodes\n  If (feature 3 in {1.0,2.0,3.0,4.0,5.0,6.0})\n   If (feature 4 in {1.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0})\n    If (feature 0 <= 27.0)\n     If (feature 0 <= 23.0)\n      If (feature 0 <= 21.0)\n       Predict: 0.0\n      Else (feature 0 > 21.0)\n       Predict: 0.0\n     Else (feature 0 > 23.0)\n      If (feature 1 in {1.0,2.0,3.0,4.0,5.0,6.0})\n       Predict: 0.0\n      Else (feature 1 not in {1.0,2.0,3.0,4.0,5.0,6.0})\n       Predict: 0.0\n    Else (feature 0 > 27.0)\n     If (feature 2 in {0.0,1.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0})\n      If (feature 4 in {5.0,6.0,7.0,9.0,10.0,13.0,14.0})\n       Predict: 0.0\n      Else (feature 4 not in {5.0,6.0,7.0,9.0,10.0,13.0,14.0})\n       Predict: 0.0\n     Else (feature 2 not in {0.0,1.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0})\n      If (feature 4 in {1.0,3.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0})\n       Predict: 0.0\n      Else (feature 4 not in {1.0,3.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0})\n       Predict: 0.0\n   Else (feature 4 not in {1.0,3.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0})\n    If (feature 0 <= 30.0)\n     If (feature 0 <= 27.0)\n      If (feature 0 <= 23.0)\n       Predict: 0.0\n      Else (feature 0 > 23.0)\n       Predict: 0.0\n     Else (feature 0 > 27.0)\n      If (feature 2 in {0.0,1.0,4.0,5.0,7.0,11.0})\n       Predict: 0.0\n      Else (feature 2 not in {0.0,1.0,4.0,5.0,7.0,11.0})\n       Predict: 0.0\n    Else (feature 0 > 30.0)\n     If (feature 2 in {0.0,1.0,4.0,5.0,6.0,7.0,8.0,10.0,11.0,14.0})\n      If (feature 1 in {2.0,4.0})\n       Predict: 0.0\n      Else (feature 1 not in {2.0,4.0})\n       Predict: 0.0\n     Else (feature 2 not in {0.0,1.0,4.0,5.0,6.0,7.0,8.0,10.0,11.0,14.0})\n      If (feature 2 in {9.0,12.0})\n       Predict: 1.0\n      Else (feature 2 not in {9.0,12.0})\n       Predict: 0.0\n  Else (feature 3 not in {1.0,2.0,3.0,4.0,5.0,6.0})\n   If (feature 4 in {1.0,3.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0})\n    If (feature 2 in {5.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0})\n     If (feature 0 <= 35.0)\n      If (feature 4 in {3.0,5.0,6.0,9.0,10.0,12.0,13.0,14.0})\n       Predict: 0.0\n      Else (feature 4 not in {3.0,5.0,6.0,9.0,10.0,12.0,13.0,14.0})\n       Predict: 0.0\n     Else (feature 0 > 35.0)\n      If (feature 2 in {13.0,14.0,15.0})\n       Predict: 0.0\n      Else (feature 2 not in {13.0,14.0,15.0})\n       Predict: 0.0\n    Else (feature 2 not in {5.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0,15.0})\n     If (feature 0 <= 35.0)\n      If (feature 2 in {2.0,3.0,4.0,6.0})\n       Predict: 0.0\n      Else (feature 2 not in {2.0,3.0,4.0,6.0})\n       Predict: 0.0\n     Else (feature 0 > 35.0)\n      If (feature 4 in {5.0,7.0,9.0,10.0,13.0,14.0})\n       Predict: 0.0\n      Else (feature 4 not in {5.0,7.0,9.0,10.0,13.0,14.0})\n       Predict: 0.0\n   Else (feature 4 not in {1.0,3.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0})\n    If (feature 2 in {0.0,1.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0})\n     If (feature 4 in {4.0})\n      If (feature 0 <= 31.0)\n       Predict: 0.0\n      Else (feature 0 > 31.0)\n       Predict: 0.0\n     Else (feature 4 not in {4.0})\n      If (feature 0 <= 32.0)\n       Predict: 0.0\n      Else (feature 0 > 32.0)\n       Predict: 1.0\n    Else (feature 2 not in {0.0,1.0,4.0,5.0,6.0,7.0,8.0,9.0,10.0,11.0,12.0,13.0,14.0})\n     If (feature 0 <= 29.0)\n      If (feature 0 <= 25.0)\n       Predict: 0.0\n      Else (feature 0 > 25.0)\n       Predict: 1.0\n     Else (feature 0 > 29.0)\n      If (feature 4 in {0.0,4.0})\n       Predict: 1.0\n      Else (feature 4 not in {0.0,4.0})\n       Predict: 1.0\n\n"}]},"apps":[],"jobName":"paragraph_1514930838736_-1285111174","id":"20180102-055212_407214091","dateCreated":"2018-01-02T22:07:18+0000","dateStarted":"2018-01-02T22:14:38+0000","dateFinished":"2018-01-02T22:14:40+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:10915"},{"user":"anonymous","dateUpdated":"2018-01-02T22:07:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1514930838736_-1285111174","id":"20180102-060923_1488088310","dateCreated":"2018-01-02T22:07:18+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:10916"}],"name":"Census2","id":"2D4UFFNBV","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}